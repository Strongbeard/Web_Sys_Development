/*CREATE USER IF NOT EXISTS 'TA_Hunter'@'localhost' IDENTIFIED BY 'web_sys_dev_user';
GRANT ALL ON TA_Hunter.* TO 'TA_Hunters'@'localhost';*/
GRANT ALL ON TA_Hunter.* TO 'TA_Hunter'@'localhost' IDENTIFIED BY 'web_sys_dev_user';

DROP DATABASE IF EXISTS TA_Hunter;
CREATE DATABASE TA_Hunter;
USE TA_Hunter;

DROP TABLE IF EXISTS Users;
CREATE TABLE users(
	userId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	rin INT UNSIGNED,
	username VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	isAdmin BOOL,
	isTA BOOL,
	isTutor BOOL,
	isStudent BOOL,
	PRIMARY KEY(userId),
	UNIQUE(rin),
	UNIQUE(username),
	UNIQUE(email)
);

DROP TABLE IF EXISTS Courses;
CREATE TABLE courses(
	courseId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	PRIMARY KEY(courseId)
);

DROP TABLE IF EXISTS TAs;
CREATE TABLE TAs(
	userId INT UNSIGNED NOT NULL,
	hours VARCHAR(255),
	courseId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(courseId) REFERENCES courses(courseId)
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Tutors;
CREATE TABLE tutors(
	userId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Students;
CREATE TABLE Students(
	userId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Passwords;
CREATE TABLE Passwords(
	userId INT UNSIGNED NOT NULL,
	password VARCHAR(255),
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Sessions;
CREATE TABLE Sessions(
	userId INT UNSIGNED NOT NULL,
	sessionNum INT UNSIGNED NOT NULL,
	timeout_Date DATETIME,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	UNIQUE(sessionNum)
);