/* DATABASE USER ACCESS */
GRANT ALL ON TA_Hunter.* TO 'TA_Hunter'@'localhost' IDENTIFIED BY 'web_sys_dev_user';

/* DATABASE CREATION */
DROP DATABASE IF EXISTS TA_Hunter;
CREATE DATABASE TA_Hunter;
USE TA_Hunter;

/* TABLE CREATION */
DROP TABLE IF EXISTS users;
CREATE TABLE users(
	userId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	email VARCHAR(255) NOT NULL,
	firstName VARCHAR(255),
	lastName VARCHAR(255),
	isAdmin BOOL NOT NULL,
	isTA BOOL NOT NULL,
	isTutor BOOL NOT NULL,
	isStudent BOOL NOT NULL,
	PRIMARY KEY(userId),
	UNIQUE(email)
);

DROP TABLE IF EXISTS courses;
CREATE TABLE courses(
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	name VARCHAR(255) NOT NULL,
	PRIMARY KEY(subj, crse)
);

/*DROP TABLE IF EXISTS TAs;
CREATE TABLE TAs(
	userId INT UNSIGNED NOT NULL,
	hours VARCHAR(255),
	courseId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(courseId) REFERENCES courses(courseId)
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Tutors;
CREATE TABLE tutors(
	userId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Students;
CREATE TABLE Students(
	userId INT UNSIGNED NOT NULL,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);*/

DROP TABLE IF EXISTS Passwords;
CREATE TABLE Passwords(
	userId INT UNSIGNED NOT NULL,
	password VARCHAR(255),
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS students_courses;
CREATE TABLE students_courses(
	userId INT UNSIGNED NOT NULL,
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	PRIMARY KEY(userId, subj, crse),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(subj, crse) REFERENCES courses(subj, crse)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS TAs_courses;
CREATE TABLE TAs_courses(
	userId INT UNSIGNED NOT NULL,
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	PRIMARY KEY(userId, subj, crse),
	FOREIGN KEY(userId) REFERENCES users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(subj, crse) REFERENCES courses(subj, crse)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

/*DROP TABLE IF EXISTS Sessions;
CREATE TABLE Sessions(
	userId INT UNSIGNED NOT NULL,
	sessionNum INT UNSIGNED NOT NULL,
	timeout_Date DATETIME,
	PRIMARY KEY(userId),
	FOREIGN KEY(userId) REFERENCES Users(userId)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	UNIQUE(sessionNum)
);*/